{"version":3,"sources":["component/Display.js","component/Button.js","component/ButtonPanel.js","logic/operate.js","logic/calculate.js","logic/isNumber.js","component/App.js","index.js"],"names":["Display","className","this","props","value","React","Component","Button","handleClick","clickHandler","name","orange","wide","join","trim","onClick","ButtonPanel","buttonName","operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","calculate","obj","total","next","test","result","includes","parseFloat","App","state","setState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fb748aa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Display.css\";\r\n\r\nexport default class Display extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tvalue: PropTypes.string,\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"component-display\">\r\n\t\t\t\t<div>{this.props.value}</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nexport default class Button extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tname: PropTypes.string,\r\n\t\torange: PropTypes.bool,\r\n\t\twide: PropTypes.bool,\r\n\t\tclickHandler: PropTypes.func,\r\n\t};\r\n\r\n\thandleClick = () => {\r\n\t\tthis.props.clickHandler(this.props.name);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst className = [\r\n\t\t\t\"component-button\",\r\n\t\t\tthis.props.orange ? \"orange\" : \"\",\r\n\t\t\tthis.props.wide ? \"wide\" : \"\",\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<div className={className.join(\" \").trim()}>\r\n\t\t\t\t<button onClick={this.handleClick}>{this.props.name}</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import Button from \"./Button\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ButtonPanel.css\";\r\n\r\nexport default class ButtonPanel extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tclickHandler: PropTypes.func,\r\n\t};\r\n\r\n\thandleClick = buttonName => {\r\n\t\tthis.props.clickHandler(buttonName);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"component-button-panel\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button name=\"AC\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"+/-\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"%\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"รท\" clickHandler={this.handleClick} orange />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button name=\"7\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"8\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"9\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"x\" clickHandler={this.handleClick} orange />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button name=\"4\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"5\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"6\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"-\" clickHandler={this.handleClick} orange />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button name=\"1\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"2\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"3\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"+\" clickHandler={this.handleClick} orange />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button name=\"0\" clickHandler={this.handleClick} wide />\r\n\t\t\t\t\t<Button name=\".\" clickHandler={this.handleClick} />\r\n\t\t\t\t\t<Button name=\"=\" clickHandler={this.handleClick} orange />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import Big from \"big.js\";\r\n\r\nexport default function operate(numberOne, numberTwo, operation) {\r\n\tconst one = Big (numberOne || \"0\");\r\n\t//If dividing or multiplying, then 1 maintains current value in cases of null\r\n\tconst two = Big (numberTwo || (operation === \"รท\" || operation === 'x' ? \"1\": \"0\"));\r\n\r\n\tif (operation === \"+\") {\r\n\t\treturn one.plus(two).toString();\r\n\t}\r\n\r\n\tif (operation === \"-\") {\r\n\t\treturn one.minus(two).toString();\r\n\t}\r\n\r\n\tif (operation === \"x\") {\r\n\t\treturn one.times(two).toString();\r\n\t}\r\n\r\n\tif (operation === \"รท\") {\r\n\t\tif (two === 0) {\r\n\t\t\talert(\"Divide by 0 error\");\r\n\t\t\treturn \"0\";\r\n\t\t} else {\r\n\t\t\treturn one.div(two).toString();\r\n\t\t}\r\n\t}\r\n\r\n\tthrow Error(`Unknown operation '${operation}'`);\r\n}","import Big from \"big.js\";\r\n\r\nimport operate from \"./operate\";\r\nimport isNumber from \"./isNumber\";\r\n\r\n/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:String      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nexport default function calculate(obj, buttonName) {\r\n  if (buttonName === \"AC\") {\r\n    return {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  if (isNumber(buttonName)) {\r\n    if (buttonName === \"0\" && obj.next === \"0\") {\r\n      return {};\r\n    }\r\n    // If there is an operation, update next\r\n    if (obj.operation) {\r\n      if (obj.next) {\r\n        return { next: obj.next + buttonName };\r\n      }\r\n      return { next: buttonName };\r\n    }\r\n    // If there is no operation, update next and clear the value\r\n    if (obj.next) {\r\n      const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\r\n      return {\r\n        next,\r\n        total: null,\r\n      };\r\n    }\r\n    return {\r\n      next: buttonName,\r\n      total: null,\r\n    };\r\n  }\r\n\r\n  if (buttonName === \"%\") {\r\n    if (obj.operation && obj.next) {\r\n      const result = operate(obj.total, obj.next, obj.operation);\r\n      return {\r\n        total: Big(result)\r\n          .div(Big(\"100\"))\r\n          .toString(),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    }\r\n    if (obj.next) {\r\n      return {\r\n        next: Big(obj.next)\r\n          .div(Big(\"100\"))\r\n          .toString(),\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  if (buttonName === \".\") {\r\n    if (obj.next) {\r\n      // ignore a . if the next number already has one\r\n      if (obj.next.includes(\".\")) {\r\n        return {};\r\n      }\r\n      return { next: obj.next + \".\" };\r\n    }\r\n    return { next: \"0.\" };\r\n  }\r\n\r\n  if (buttonName === \"=\") {\r\n    if (obj.next && obj.operation) {\r\n      return {\r\n        total: operate(obj.total, obj.next, obj.operation),\r\n        next: null,\r\n        operation: null,\r\n      };\r\n    } else {\r\n      // '=' with no operation, nothing to do\r\n      return {};\r\n    }\r\n  }\r\n\r\n  if (buttonName === \"+/-\") {\r\n    if (obj.next) {\r\n      return { next: (-1 * parseFloat(obj.next)).toString() };\r\n    }\r\n    if (obj.total) {\r\n      return { total: (-1 * parseFloat(obj.total)).toString() };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  // Button must be an operation\r\n\r\n  // When the user presses an operation button without having entered\r\n  // a number first, do nothing.\r\n  // if (!obj.next && !obj.total) {\r\n  //   return {};\r\n  // }\r\n\r\n  // User pressed an operation button and there is an existing operation\r\n  if (obj.operation) {\r\n    return {\r\n      total: operate(obj.total, obj.next, obj.operation),\r\n      next: null,\r\n      operation: buttonName,\r\n    };\r\n  }\r\n\r\n  // no operation yet, but the user typed one\r\n\r\n  // The user hasn't typed a number yet, just save the operation\r\n  if (!obj.next) {\r\n    return { operation: buttonName };\r\n  }\r\n\r\n  // save the operation and shift 'next' into 'total'\r\n  return {\r\n    total: obj.next,\r\n    next: null,\r\n    operation: buttonName,\r\n  };\r\n}","export default function isNumber(item) {\r\n\treturn /[0-9]+/.test(item);\r\n}","import React from \"react\";\nimport Display from \"./Display\";\nimport ButtonPanel from \"./ButtonPanel\";\nimport calculate from \"../logic/calculate\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n\tstate = {\n\t\ttotal: null,\n\t\tnext: null,\n\t\toperation: null,\n\t};\n\n\thandleClick = buttonName => {\n\t\tthis.setState(calculate(this.state, buttonName));\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"compenent-app\">\n\t\t\t\t<Display value={this.state.next || this.state.total || \"0\"} />\n\t\t\t\t<ButtonPanel clickHandler={this.handleClick} />\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./component/App.js\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}